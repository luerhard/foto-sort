[tool.poetry]
name = "foto-sort"
version = "0.2.0"
packages = [{include = "fotosort", from="src/"}]
description = "Sort fotos by date and location of file metadata"
authors = [
    "Lukas Erhard <luerhard@googlemail.com>"
]
license = "Apache"
readme = "README.md"
homepage = "https://github.com/luerhard/foto-sort"
repository = "https://github.com/luerhard/foto-sort"
documentation = "https://github.com/luerhard/foto-sort"

keywords = ["foto", "photo", "sort", "copy", "organize", "location", "date"]

classifiers = [
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Multimedia",
    "Topic :: Scientific/Engineering :: Image Processing"
]

# Requirements
[tool.poetry.dependencies]
python = ">=3.9,<4.0"
pyexiftool = ">=0.5.6"
reverse-geocode = ">=1.4.1"
numpy = [{version = ">=1.7", python = "<=3.12"}, {version = ">=1.26", python = ">=3.12"}]
scipy = [{version = ">=1.6", python = "<=3.12"}, {version = ">=1.11.3", python = ">=3.12"}]
tqdm = "^4.66.2"
click = "^8.1.7"
pillow = "^10.3.0"
confuse = "^2.0.1"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"

[tool.poetry.scripts]
fotoingest = "fotosort.main:main"

[tool.ruff]
fix = true
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
select = [
"ARG", # flake8-unused-arguments
"B", # flake8-bugbear
"C4", #flake8-comprehensions
"COM", #flake8-commas
# "D", # pydocstyle
"E", # pycodestyle
"EM", # flake8-errmsg
"F", # pyflakes
"I", # isort
"N", # pep8-naming
"PT", #flake8-pytest-style
"PTH", # flake8-use-pathlib
"Q", # flake8-quotes
"UP", # pyupgrade
]
ignore = [
  "D100", # no module docstring
  "D107", # no docstring in __init__ funcs
]
target-version = "py38"
line-length = 100
ignore-init-module-imports = true

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402", "D104"]
"docs/**" = [
  "ARG002",
  "B018",
  "D",
  "E402",
  "F811",
]
"tests/**" = ["D"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
force-single-line = true
force-sort-within-sections = true
lines-after-imports = 1

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
